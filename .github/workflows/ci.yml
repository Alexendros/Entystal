name: CI

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: entystal
        ports: ["5432:5432"]
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Comprobar conflictos de fusi\u00f3n
        run: |
          git fetch origin ${{ github.base_ref }}
          git merge --no-commit --no-ff origin/${{ github.base_ref }} || { echo "Conflictos detectados con la rama base"; exit 1; }
      - name: Configurar Java y sbt
        uses: coursier/setup-action@v1
        with:
          apps: sbt
      - name: Instalar cliente PostgreSQL
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Inicializar base de datos
        env:
          PGUSER: postgres
          PGPASSWORD: password
        run: psql -h localhost -d entystal -f core/sql/entystal_schema.sql
      - name: Formateo y cobertura
        env:
          PGUSER: postgres
          PGPASSWORD: password
        run: |
          sbt scalafmtCheckAll
          sbt coverage test coverageAggregate
      - name: Publicar reporte de cobertura
        uses: actions/upload-artifact@v3
        with:
          name: scoverage-report
          path: target/scala-*/scoverage-report
      - name: Instalaci\u00f3n de Snyk
        uses: snyk/actions/setup@v1
      - name: Escaneo de dependencias
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --all-projects
